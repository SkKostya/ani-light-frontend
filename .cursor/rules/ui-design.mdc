---
alwaysApply: true
---

# Правила оформления UI в аниме стиле

## Цветовая схема и палитра

### Основные принципы

- Используй яркие, насыщенные цвета с высокой контрастностью
- Применяй неоновые оттенки для акцентов и интерактивных элементов
- Соблюдай принцип 60-30-10: 60% нейтральных цветов, 30% основных, 10% акцентных
- Всегда используй цвета из `src/shared/constants/theme-palette.ts` и CSS переменные из `src/styles/theme-variables.scss`

### Цветовые комбинации

- **Primary**: Магический розовый (#e91e63) - для основных действий и CTA
- **Secondary**: Электрический синий (#00bcd4) - для вторичных действий
- **Accent**: Неоновые цвета (фиолетовый, оранжевый, зеленый) - для выделения важных элементов
- **Gradients**: Используй готовые градиенты (sunset, ocean, forest, night, fire, ice, magic)

## Типографика

### Шрифты

- Предпочитай современные, читаемые шрифты с закругленными краями
- Для заголовков используй жирные начертания (font-weight: 600-700)
- Для основного текста - средние начертания (font-weight: 400-500)
- Избегай слишком тонких шрифтов (font-weight < 300)

### Размеры и иерархия

- Создавай четкую иерархию: h1 > h2 > h3 > h4 > body1 > body2 > caption
- Используй достаточные отступы между элементами (минимум 8px)
- Применяй line-height: 1.4-1.6 для читаемости

## Компоненты и элементы

### Кнопки

- Используй градиенты для primary кнопок (anime-gradient-magic, anime-gradient-sunset)
- Добавляй hover-эффекты с transform: translateY(-2px) и цветными тенями
- Применяй border-radius: 8-12px для мягкости
- Используй иконки для улучшения UX

### Карточки

- Применяй мягкие тени (var(--shadow-medium))
- Добавляй hover-эффекты с подъемом (transform: translateY(-4px))
- Используй градиенты для фона или цветные границы
- Применяй border-radius: 12-16px

### Формы и инпуты

- Используй цветные фокус-состояния с glow-эффектом
- Применяй плавные переходы (transition: all 0.3s ease-in-out)
- Добавляй иконки для визуального разделения полей

## Анимации и переходы

### Принципы анимации

- Все анимации должны быть плавными и естественными
- Используй easing функции: ease-in-out, ease-out
- Длительность: 0.15s для быстрых, 0.3s для средних, 0.5s для медленных
- Избегай резких, рваных движений

### Готовые анимации

- `.anime-glow` - пульсирующее свечение
- `.anime-pulse` - мягкое увеличение
- `.anime-float` - плавающее движение
- Используй transform для hover-эффектов

## Пространство и компоновка

### Отступы и размеры

- Используй 8px grid system для консистентности
- Применяй достаточные отступы между секциями (24-32px)
- Создавай визуальное дыхание между элементами

### Радиусы скругления

- Маленькие элементы: 4px (--border-radius-small)
- Средние элементы: 8px (--border-radius-medium)
- Большие элементы: 12px (--border-radius-large)
- Очень большие: 16px (--border-radius-xl)

## Тени и эффекты

### Принципы теней

- Используй цветные тени для создания глубины
- Применяй разные уровни: small, medium, large, glow
- Создавай glow-эффекты для важных элементов

### Готовые тени

- `var(--shadow-small)` - для мелких элементов
- `var(--shadow-medium)` - для карточек
- `var(--shadow-large)` - для модальных окон
- `var(--shadow-glow)` - для акцентных элементов

## Интерактивность

### Hover-эффекты

- Всегда добавляй hover-состояния для интерактивных элементов
- Используй transform для движения (scale, translateY)
- Применяй изменения цвета и тени
- Добавляй плавные переходы

### Focus-состояния

- Создавай видимые focus-индикаторы
- Используй glow-эффекты для важных элементов
- Обеспечивай доступность для клавиатурной навигации

## Адаптивность

### Breakpoints

- Mobile: до 768px
- Tablet: 768px - 1024px
- Desktop: 1024px+
- Используй MUI breakpoints для консистентности

### Мобильная адаптация

- Увеличивай размеры кнопок на мобильных устройствах
- Упрощай сложные анимации на слабых устройствах
- Используй touch-friendly размеры (минимум 44px)

## Доступность

### Контрастность

- Обеспечивай достаточный контраст между текстом и фоном
- Используй цветовые индикаторы в дополнение к цвету
- Тестируй в разных темах (светлая/темная)

### Семантика

- Используй семантические HTML-теги
- Добавляй aria-labels для интерактивных элементов
- Обеспечивай навигацию с клавиатуры

## Специфика аниме-стиля

### Визуальные элементы

- Используй мягкие, органичные формы
- Применяй градиенты для создания глубины
- Добавляй subtle glow-эффекты для магического ощущения
- Используй яркие, но не кричащие цвета

### Эмоциональность

- Создавай радостную, позитивную атмосферу
- Используй плавные, естественные движения
- Добавляй элементы, которые вызывают улыбку
- Избегай агрессивных, резких переходов

## Техническая реализация

### CSS переменные

- Всегда используй CSS переменные из theme-variables.scss
- Не хардкодь цвета в компонентах
- Применяй готовые классы (.anime-gradient-\*, .anime-glow, etc.)

### MUI интеграция

- Используй sx prop для стилизации MUI компонентов
- Применяй theme.palette для цветов
- Кастомизируй компоненты через theme.overrides

### Производительность

- Используй transform вместо изменения layout-свойств
- Применяй will-change для анимируемых элементов
- Оптимизируй анимации для 60fps
